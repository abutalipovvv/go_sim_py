amcl:
  ros__parameters:
    use_sim_time: true
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.3
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan

map_server:
  ros__parameters:
    use_sim_time: true
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: true
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: true

bt_navigator:
  ros__parameters:
    use_sim_time: true
    enable_stamped_cmd_vel: false
    global_frame: map
    robot_base_frame: base_link
    odom_topic: odometry/filtered
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"
    error_code_names:
      - compute_path_error_code
      - follow_path_error_code

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]
    # Добавляем явный выбор плагинов
    current_progress_checker: "progress_checker"
    current_goal_checker: "general_goal_checker"
    use_realtime_priority: false
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    general_goal_checker:
      stateful: true
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.2
    # DWB controller parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.18
      max_vel_y: 0.0
      max_vel_theta: 0.5
      min_speed_xy: 0.0
      max_speed_xy: 0.18
      min_speed_theta: 0.0
      acc_lim_x: 2.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      limit_vel_cmd_in_traj: False
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

    # FollowPath:
    #     plugin: "nav2_mppi_controller::MPPIController"
    #     time_steps: 56
    #     model_dt: 0.05
    #     batch_size: 2000
    #     vx_std: 0.18
    #     vy_std: 0.18
    #     wz_std: 0.18
    #     vx_max: 1.0
    #     vx_min: -1.0
    #     vy_max: 1.0
    #     wz_max: 1.0
    #     iteration_count: 1
    #     prune_distance: 2.5
    #     transform_tolerance: 0.1
    #     temperature: 0.3
    #     gamma: 0.015
    #     motion_model: "DiffDrive"
    #     visualize: true
    #     regenerate_noises: false
    #     TrajectoryVisualizer:
    #         trajectory_step: 5
    #         time_step: 3
    #     AckermannConstraints:
    #         min_turning_r: 0.199996
    #     critics:
    #         [
    #             "ConstraintCritic",
    #             "ObstaclesCritic",
    #             "GoalCritic",
    #             "GoalAngleCritic",
    #             "CostCritic",
    #             "PathAlignCritic",
    #             "PathFollowCritic",
    #             "PathAngleCritic",
    #             "PreferForwardCritic",
    #         ]
    #     ConstraintCritic:
    #         enabled: true
    #         cost_power: 1
    #         cost_weight: 4.0
    #     GoalCritic:
    #         enabled: true
    #         cost_power: 1
    #         cost_weight: 5.0
    #         threshold_to_consider: 1.4
    #     GoalAngleCritic:
    #         enabled: true
    #         cost_power: 1
    #         cost_weight: 3.0
    #         threshold_to_consider: 0.5
    #     PreferForwardCritic:
    #         enabled: false
    #         cost_power: 1
    #         cost_weight: 5.0
    #         threshold_to_consider: 0.5
    #     # ObstaclesCritic:
    #     #     enabled: true
    #     #     cost_power: 1
    #     #     repulsion_weight: 1.5
    #     #     critical_weight: 20.0
    #     #     consider_footprint: true
    #     #     collision_cost: 10000.0
    #     #     collision_margin_distance: 0.15
    #     #     near_goal_distance: 0.5
    #     #     inflation_radius: 0.25 # (only in Humble)
    #     #     cost_scaling_factor: 10.0 # (only in Humble)
    #     PathAlignCritic:
    #         enabled: true
    #         cost_power: 1
    #         cost_weight: 14.0
    #         max_path_occupancy_ratio: 0.05
    #         trajectory_point_step: 3
    #         threshold_to_consider: 0.5
    #         offset_from_furthest: 20
    #         use_path_orientations: true
    #     CostCritic:
    #       enabled: true
    #       cost_power: 3
    #       cost_weight: 3.81
    #       critical_cost: 300.0
    #       consider_footprint: true
    #       collision_cost: 1000000.0
    #       near_goal_distance: 1.0
    #     PathFollowCritic:
    #         enabled: true
    #         cost_power: 1
    #         cost_weight: 5.0
    #         offset_from_furthest: 5
    #         threshold_to_consider: 1.4
    #     PathAngleCritic:
    #         enabled: true
    #         cost_power: 1
    #         cost_weight: 2.0
    #         offset_from_furthest: 4
    #         threshold_to_consider: 0.5
    #         max_angle_to_furthest: 1.0
    #         forward_preference: true
    #         mode: 0



local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: true
      enable_stamped_cmd_vel: false
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: true
      rolling_window: true
      width: 10
      height: 10
      resolution: 0.05
      footprint: "[ [0.35, 0.18], [0.35, -0.18], [-0.38, -0.18], [-0.38, 0.18] ]"
      plugins: ["static_layer", "voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 4.0
        inflation_radius: 0.45
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: true
        publish_voxel_map: true
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /robot1/scan
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
      always_send_full_costmap: true

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: true
      enable_stamped_cmd_vel: false
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: true
      footprint: "[ [0.35, 0.175], [0.35, -0.175], [-0.35, -0.175], [-0.35, 0.175] ]"
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /robot1/scan
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 4.0
        inflation_radius: 0.45
      always_send_full_costmap: true

planner_server:
  ros__parameters:
    planner_plugins: ['GridBased']
    GridBased:
      plugin: 'nav2_navfn_planner::NavfnPlanner' # In Iron and older versions, "/" was used instead of "::"
      use_astar: True
      allow_unknown: True
      tolerance: 1.0

# planner_server:
#   ros__parameters:
#     use_sim_time: true
#     planner_plugins: ["GridBased"]

#     GridBased:
#       plugin: "nav2_smac_planner::SmacPlanner2D" # In Iron and older versions, "/" was used instead of "::"
#       tolerance: 0.125                      # tolerance for planning if unable to reach exact pose, in meters
#       downsample_costmap: false             # whether or not to downsample the map
#       downsampling_factor: 1                # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
#       allow_unknown: true                   # allow traveling in unknown space
#       max_iterations: 1000000               # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
#       max_on_approach_iterations: 1000      # maximum number of iterations to attempt to reach goal once in tolerance
#       max_planning_time: 2.0                # max time in s for planner to plan, smooth
#       cost_travel_multiplier: 2.0           # Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
#       use_final_approach_orientation: false # Whether to set the final path pose at the goal's orientation to the requested orientation (false) or in line with the approach angle so the robot doesn't rotate to heading (true)
#       smoother:
#         max_iterations: 1000
#         w_smooth: 0.3
#         w_data: 0.2
#         tolerance: 1.0e-10

smoother_server:
  ros__parameters:
    use_sim_time: true
    enable_stamped_cmd_vel: false
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: true

behavior_server:
  ros__parameters:
    use_sim_time: true
    enable_stamped_cmd_vel: false
    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors::Spin"
    backup:
      plugin: "nav2_behaviors::BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors::DriveOnHeading"
    wait:
      plugin: "nav2_behaviors::Wait"
    assisted_teleop:
      plugin: "nav2_behaviors::AssistedTeleop"
    global_frame: map
    local_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.1
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: true

waypoint_follower:
  ros__parameters:
    use_sim_time: true
    enable_stamped_cmd_vel: false
    loop_rate: 20
    stop_on_failure: false
    action_server_result_timeout: 900.0
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: true
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: true
    enable_stamped_cmd_vel: false
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.26, 0.0, 1.0]
    min_velocity: [-0.26, 0.0, -1.0]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odometry/filtered"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

collision_monitor:
  ros__parameters:
    use_sim_time: true
    enable_stamped_cmd_vel: false
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    cmd_vel_in_topic: "cmd_vel_smoothed"
    cmd_vel_out_topic: "cmd_vel"
    state_topic: "collision_monitor_state"
    transform_tolerance: 0.2
    source_timeout: 1.0
    base_shift_correction: True
    stop_pub_timeout: 2.0
    # Polygons represent zone around the robot for "stop", "slowdown" and "limit" action types,
    # and robot footprint for "approach" action type.
    polygons: ["FootprintApproach"]
    FootprintApproach:
      type: "polygon"
      action_type: "approach"
      footprint_topic: "/local_costmap/published_footprint"
      time_before_collision: 1.2
      simulation_time_step: 0.1
      min_points: 6
      visualize: False
      enabled: True
    observation_sources: ["scan"]
    scan:
      type: "scan"
      topic: "scan"
      min_height: 0.15
      max_height: 2.0
      enabled: True

# docking_server:
#   ros__parameters:
#     controller_frequency: 10.0
#     initial_perception_timeout: 20.0  # Default 5.0 
#     wait_charge_timeout: 5.0
#     dock_approach_timeout: 30.0
#     undock_linear_tolerance: 0.05 
#     undock_angular_tolerance: 0.05
#     max_retries: 5
#     base_frame: "base_link"
#     fixed_frame: "odom"
#     dock_backwards: false
#     dock_prestaging_tolerance: 0.5
 
#     # Types of docks
#     dock_plugins: ['rosmaster_x3_dock']
#     rosmaster_x3_dock:
#       plugin: 'opennav_docking::SimpleChargingDock'
#       docking_threshold: 0.02
#       staging_x_offset: 0.75
#       staging_yaw_offset: 3.14
#       use_external_detection_pose: true
#       use_battery_status: false
#       use_stall_detection: false
#       stall_velocity_threshold: 1.0
#       stall_effort_threshold: 1.0
#       charging_threshold: 0.5
 
#       external_detection_timeout: 1.0
#       external_detection_translation_x: -0.18
#       external_detection_translation_y: 0.0
#       external_detection_rotation_roll: -1.57
#       external_detection_rotation_pitch: 1.57
#       external_detection_rotation_yaw: 0.0
#       filter_coef: 0.1

#     # Dock instances
#     dock_database: /root/ws/src/yahboom_rosmaster_docking/config/dock_database.yaml

#     controller:
#       k_phi: 3.0
#       k_delta: 2.0
#       beta: 0.4
#       lambda: 2.0
#       v_linear_min: 0.1
#       v_linear_max: 0.15
#       v_angular_max: 0.75
#       slowdown_radius: 0.25
#       use_collision_detection: true
#       costmap_topic: "/robot1/local_costmap/costmap_raw"
#       footprint_topic: "/robot1/local_costmap/published_footprint"
#       transform_tolerance: 0.1
#       projection_time: 5.0
#       simulation_step: 0.1
#       dock_collision_threshold: 0.3